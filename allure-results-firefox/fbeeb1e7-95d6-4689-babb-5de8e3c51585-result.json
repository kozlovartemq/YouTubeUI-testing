{"name": "test_search_and_play_video[no_video]", "status": "skipped", "statusDetails": {"message": "XFAIL There should not be a video here\n\nAssertionError: Видео не найдено", "trace": "self = <tests.test_youtubepage.TestYoutubeUI object at 0x034A1310>\ntest_data = ['somelongstringsovideowillnofound', 'SomeVideo']\n\n    @allure.story(\"Проверка поиска и воспроизведения видео\")\n    @pytest.mark.parametrize('test_data', [['Non-Fungible Planet', 'Non-Fungible Planet | YouTube'],\n                                           ['Never Gonna Give You Up', \"Rick Astley - Never Gonna Give You Up (Instrumental)\"],\n                                           pytest.param(['somelongstringsovideowillnofound', 'SomeVideo'], marks=pytest.mark.xfail(reason='There should not be a video here'))],\n                             ids=['close_video', 'far_video', 'no_video'])\n    def test_search_and_play_video(self, test_data):\n        \"\"\"Verifying the ability to search and play videos\"\"\"\n        search_n_play = YouTubePage(self.driver)\n        search_text, video_name = test_data\n    \n        search_n_play.search_by_text(search_text)\n        search_n_play.click_search_button()\n>       video = search_n_play.find_video(video_name)\n\ntests\\test_youtubepage.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.youtubepage.YouTubePage object at 0x034A1C28>, name = 'SomeVideo'\n\n    @allure.step('Поиск видео по названию')\n    def find_video(self, name) -> WebElement:\n        \"\"\"\n        Поиск видео до тех пор, пока не появится сообщение: 'Больше нет результатов'.\n        Проверка производится по названиям видимых (загруженных) видео на странице результатов поиска.\n        Когда появляется вышеупомянутое сообщение, проверка производится последный раз.\n        Функция возвращает найденный элемент (видео) или вызывает соответсвующий AssertionError.\n        Так как подгружается не всегда одинаковое количество видео, номер последнего подгруженного запоминается,\n        в следующей итерации поиск начинается со следующего подгруженного видео.\n        \"\"\"\n        def inner(text, last=False, interval=[]):\n    \n            page_elements = self._are_present('xpath', YouTubeLocators.vid_title_wrapper)\n            if not interval:\n                finding_element = self._get_element_from_list_by_text(page_elements, text)\n            else:\n                begin_with = page_elements.index(interval[-1]) + 1\n                finding_element = self._get_element_from_list_by_text(page_elements[begin_with:], text)\n            if finding_element is not None:\n                return finding_element\n            if not last:\n                last_element = page_elements[-1]\n                self._scroll_to_element(last_element)\n                interval.append(last_element)\n    \n        while True:\n    \n            try:\n                msg = self._driver.find_element_by_xpath(YouTubeLocators.nothing_more_msg)\n            except NoSuchElementException:\n                result = inner(name)\n                if isinstance(result, WebElement):\n                    return result\n            else:\n                result = inner(name, last=True)\n                if isinstance(result, WebElement):\n                    return result\n>               assert False, 'Видео не найдено'\nE               AssertionError: Видео не найдено\n\npages\\youtubepage.py:65: AssertionError"}, "description": "Verifying the ability to search and play videos", "steps": [{"name": "Набор заданного текста в поле поиска", "status": "passed", "parameters": [{"name": "text", "value": "'somelongstringsovideowillnofound'"}], "start": 1653480679009, "stop": 1653480679292}, {"name": "Клик по кнопке \"Найти\"", "status": "passed", "start": 1653480679292, "stop": 1653480680011}, {"name": "Поиск видео по названию", "status": "failed", "statusDetails": {"message": "AssertionError: Видео не найдено\n", "trace": "  File \"C:\\Users\\Artem Kozlov\\PycharmProjects\\youtubetestingUI\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Artem Kozlov\\PycharmProjects\\youtubetestingUI\\pages\\youtubepage.py\", line 65, in find_video\n    assert False, 'Видео не найдено'\n"}, "parameters": [{"name": "name", "value": "'SomeVideo'"}], "start": 1653480680011, "stop": 1653480684347}], "parameters": [{"name": "test_data", "value": "['somelongstringsovideowillnofound', 'SomeVideo']"}], "start": 1653480669611, "stop": 1653480684372, "uuid": "50a44028-3a77-4ddc-99e0-31e368cb04ab", "historyId": "467c16d729002cf31b81d235bbaa7a70", "testCaseId": "dbc986a587b026815a1297dd7db3f92f", "fullName": "tests.test_youtubepage.TestYoutubeUI#test_search_and_play_video", "labels": [{"name": "story", "value": "Проверка поиска и воспроизведения видео"}, {"name": "feature", "value": "Тесты воспроизведения YouTube видео"}, {"name": "tag", "value": "@pytest.mark.xfail(reason='There should not be a video here')"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_driver_init')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_youtubepage"}, {"name": "subSuite", "value": "TestYoutubeUI"}, {"name": "host", "value": "ArtemKozlov"}, {"name": "thread", "value": "7660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_youtubepage"}]}